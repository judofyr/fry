function add
T: Type
a: T
b: T
return: T
@builtin

function sub
T: Type
a: T
b: T
return: T
@builtin

function mul
T: Type
a: T
b: T
return: T
@builtin

function and
a: Bool
b: Bool
return: Bool
@builtin

function or
a: Bool
b: Bool
return: Bool
@builtin

function set
T: Type
a: T
b: T
@builtin

function throw
@builtin
@throws

struct Coro

function coro
return: Coro
@builtin

function resume
coro: Coro
@builtin

function suspend
@builtin
@suspends

function wait
ms: Int32
@suspends
@js "return setTimeout(cont, ms[0]);"

trait Arr
T: Type
{
  function len
  return: Int32

  function at
  idx: Int32
  return: T
}

import list "./list"

