function add
T: Type
a: T
b: T
return: T
@builtin

function sub
T: Type
a: T
b: T
return: T
@builtin

function mul
T: Type
a: T
b: T
return: T
@builtin

function and
a: Bool
b: Bool
return: Bool
@builtin

function or
a: Bool
b: Bool
return: Bool
@builtin

function set
T: Type
a: T
b: T
@builtin

struct Ref
T: Type
{
  data: T
}

function ref
T: Type
a: T
return: Ref<T>
{
  return Ref<T>(data=a)
}

function deref
T: Type
a: Ref<T>
return: T
{
  return a.data
}

struct Coro

function coro
return: Coro
@builtin

function resume
coro: Coro
@builtin

function suspend
@builtin

function wait
ms: Int32
@suspends
@js "setTimeout(cont, ms[0])"

